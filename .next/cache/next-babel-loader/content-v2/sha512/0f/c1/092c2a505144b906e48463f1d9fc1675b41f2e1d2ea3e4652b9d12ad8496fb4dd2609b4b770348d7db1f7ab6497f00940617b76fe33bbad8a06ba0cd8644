{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/carlos/Curso-React/NextJs-Course/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 12\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/carlos/Curso-React/NextJs-Course/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","console","log","meetupData","image","title","address","description"],"mappings":";;;;;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBAAO,QAAC,YAAD;AACH,IAAA,KAAK,EAAEA,KAAK,CAACG,UAAN,CAAiBC,KADrB;AAEH,IAAA,KAAK,EAAEJ,KAAK,CAACG,UAAN,CAAiBE,KAFrB;AAGH,IAAA,OAAO,EAAEL,KAAK,CAACG,UAAN,CAAiBG,OAHvB;AAIH,IAAA,WAAW,EAAEN,KAAK,CAACG,UAAN,CAAiBI;AAJ3B;AAAA;AAAA;AAAA;AAAA,WAAP;AAMH,CARD;;KAAMR,a;;AAuDN,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = (props) => {\n    console.log(props)\n    return <MeetupDetail \n        image={props.meetupData.image}\n        title={props.meetupData.title}\n        address={props.meetupData.address}\n        description={props.meetupData.description}    \n    />;\n};\n\nexport async function getStaticPaths() {\n    const client = await MongoClient.connect(\n        \"mongodb+srv://admin:o9R3m2eL7MB4Hr2f@cluster0.g2b9g.mongodb.net/meetups?retryWrites=true&w=majority\"\n    );\n    const db = client.db();\n    const meetupsCollection = db.collection(\"meetups\");\n\n    const meetups = await meetupsCollection.find({}, { _id: 1 }).toArray();\n    client.close();\n\n    return {\n        fallback: false,\n        paths: meetups.map((meetup) => ({\n            params: {\n                meetupId: meetup._id.toString(),\n            },\n        })),\n    };\n}\n\nexport async function getStaticProps(context) {\n    const meetupId = context.params.meetupId;\n\n    const client = await MongoClient.connect(\n        \"mongodb+srv://admin:o9R3m2eL7MB4Hr2f@cluster0.g2b9g.mongodb.net/meetups?retryWrites=true&w=majority\"\n    );\n    const db = client.db();\n    const meetupsCollection = db.collection(\"meetups\");\n\n    const selectedMeetup = await meetupsCollection.findOne({_id: ObjectId(meetupId)})\n    client.close();\n\n    return {\n        props: {\n            meetupData: {\n                id: selectedMeetup._id.toString(),\n                title: selectedMeetup.title,\n                address: selectedMeetup.address,\n                image: selectedMeetup.image,\n                description: selectedMeetup.description\n            },\n        },\n    };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}