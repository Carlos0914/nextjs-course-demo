{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/carlos/Curso-React/NextJs-Course/pages/index.js\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 12\n  }, this);\n} // run during build process\n\n\nexport async function getStaticProps() {\n  //fetch data from an API\n  const client = await MongoClient.connect(\"mongodb+srv://admin:o9R3m2eL7MB4Hr2f@cluster0.g2b9g.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n} // run always on the server on load\n// export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res;\n//     //fetch data from an API\n//     return {\n//         props: { meetups: DUMMY_MEETUPS },\n//     };\n// }\n\nexport default HomePage;","map":{"version":3,"sources":["/Users/carlos/Curso-React/NextJs-Course/pages/index.js"],"names":["MongoClient","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACrB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,C,CAED;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA,QAAMC,MAAM,GAAG,MAAMN,WAAW,CAACO,OAAZ,CACjB,qGADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AACAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACHV,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAYC,MAAM,KAAK;AAC5BC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADc;AAE5BC,QAAAA,OAAO,EAAEF,MAAM,CAACE,OAFY;AAG5BC,QAAAA,KAAK,EAAEH,MAAM,CAACG,KAHc;AAI5BC,QAAAA,EAAE,EAAEJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJwB,OAAL,CAAlB;AADN,KADJ;AASHC,IAAAA,UAAU,EAAE;AATT,GAAP;AAWH,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,eAAepB,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction HomePage(props) {\n    return <MeetupList meetups={props.meetups} />;\n}\n\n// run during build process\nexport async function getStaticProps() {\n    //fetch data from an API\n    const client = await MongoClient.connect(\n        \"mongodb+srv://admin:o9R3m2eL7MB4Hr2f@cluster0.g2b9g.mongodb.net/meetups?retryWrites=true&w=majority\"\n    );\n    const db = client.db();\n    const meetupsCollection = db.collection(\"meetups\");\n\n    const meetups = await meetupsCollection.find().toArray();\n    client.close();\n\n    return {\n        props: {\n            meetups: meetups.map(meetup => ({\n                title: meetup.title,\n                address: meetup.address,\n                image: meetup.image,\n                id: meetup._id.toString()\n            })),\n        },\n        revalidate: 1,\n    };\n}\n\n// run always on the server on load\n// export async function getServerSideProps(context) {\n//     const req = context.req;\n//     const res = context.res;\n\n//     //fetch data from an API\n//     return {\n//         props: { meetups: DUMMY_MEETUPS },\n//     };\n// }\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}